version: "3.9"

services:
  php-fpm:
    image: misp3/php:8.2-fpm
    build:
      context: .
      dockerfile: docker/misp/Dockerfile
      target: prod
    restart: unless-stopped
    tty: true
    environment:
      MISP_DB: misp
      MISP_DB_USER: misp
      MISP_DB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/misp/config/app_local.php:/var/www/html/config/app_local.php
      - ./docker/misp/logs:/var/www/html/logs
    networks:
      - backend-network
      - frontend-network
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: misp3/nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/certs:/etc/nginx/certs
    entrypoint: /usr/local/bin/entrypoint.sh
    depends_on:
      - php-fpm
    networks:
      - frontend-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: misp
      POSTGRES_USER: misp
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend-network

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  db_data:
