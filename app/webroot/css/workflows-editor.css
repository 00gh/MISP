.root-container {
    display: flex;
    height: calc(100vh - 2*42px); /* total space available minus header and footer */
    margin-top: -20px;
}

.main-container {
    display: flex;
    height: 100%;
    width: 100%;
    position: relative;
}

.main-container::after {
    content: ' ';
    backdrop-filter: blur(3px);
    width: var(--editor-sidepanel-width);
    height: 100%;
    position: absolute;
    background-color: #ffffff66;
}

.selection-area {
    background: rgba(46, 115, 252, 0.11);
    border: 2px solid rgba(98, 155, 255, 0.81);
    border-radius: 0.1em;
}

.side-panel {
    z-index: 18;
    box-sizing: border-box;
    height: 100%;
    width: var(--editor-sidepanel-width);
    box-shadow: 2px 0px 6px #cecece;
    padding: 0.5em 0.25em;
    display: flex;
    flex-direction: column;
    position: absolute;
}

.side-panel #block-tabs {
    margin-bottom: 10px;
}

.side-panel #block-tabs i.fas {
    margin-right: 2px;
}

.side-panel .workflow-selector-container {
    display: flex;
}

.side-panel .workflow-selector-container > select {
    flex-grow: 1;
}
.side-panel .workflow-selector-container > button {
    margin-left: 0.25em;
}

.side-panel .chosen-container.workflows {
    margin-bottom: 0;
}

.side-panel .last-modified {
    /* width: 70px; */
    margin-left: 3px;
    margin-top: 2px;
}

.side-panel .loading-span {
    margin-right: 5px;
    margin-left: 0px;
    line-height: 20px;
}

.side-panel .chosen-container.blocks {
    width: 100%;
    margin-bottom: 1.25em;
}

.side-panel #block-tabs {
    margin-top: 1.25em;
}

.side-panel .tab-pane.active {
    overflow-y: auto;
}

.sidebar-workflow-block {
    display: flex;
    width: 300px;
    background-color: #fff;
    border-radius: 5px;
    margin: 0.75em 0.5em;
    padding: 0.5em 0.25em;
    transition-property: box-shadow;
    transition-duration: .1s;
    box-shadow: 0px 3px 6px 2px #33333322;
}

.sidebar-workflow-block:hover {
    box-shadow: 0px 3px 6px 2px #33333333;
    cursor: pointer;
}

.sidebar-workflow-block.disabled {
    cursor: not-allowed !important;
    filter: blur(1px);
    background-color: #ffd4d4;
}

.sidebar-workflow-block.disabled-one-instance {
    background-color: #ffa5a5;
}

.sidebar-workflow-block.disabled:hover {
    box-shadow: 0px 3px 6px 2px #33333311;
}

.sidebar-workflow-block > .icon {
    width: 1.25em;
    align-items: flex-start;
    display: flex;
    font-size: large;
    padding: 0 0.25em;
}

.sidebar-workflow-block .block-notification-container {
    margin-left: auto;
    vertical-align: middle;
}

.canvas {
    height: 100%;
    width: 100%;
}

.canvas-workflow-block {
    display: flex;
    width: 300px;
    background-color: #fff;
    border-radius: 5px;
    padding: 0.25em 0.75em;
    box-shadow: 0px 3px 6px 2px #33333333;
}

.canvas-workflow-block br {
    width: 100%;
    height: 1px;
    background-color: #e9e9e9;
}

.canvas-workflow-block>.icon {
    width: 1.25em;
    align-items: flex-start;
    display: flex;
    font-size: large;
    padding: 0 0.25em;
}

.canvas .modal-backdrop {
    display: flex;
    align-items: center;
    justify-content: center;
    left: var(--editor-sidepanel-width)
}

#drawflow {
    height: 100%;
    width: 100%;
}

/* Canvas blocks */
.default-main-container {
    display: flex;
    font-size: large;
    padding: 0.25em 0;
    border-bottom: 1px solid #efefef;
}

.canvas-workflow-block.small .default-main-container-small {
    display: flex;
    font-size: large;
    padding: 0.25em;
    height: 100%;
    box-sizing: border-box;
    align-items: center;
}

.default-main-container-small .then-else-container {
    font-size: small;
    display: flex;
    flex-direction: column;
    margin-left: auto;
    font-family: monospace;
    margin-top: -1px;
    margin-right: 2px;

}

.default-main-container .description {
    user-select: none;
    margin: 0.25em 0.5em;
}

.drawflow svg.connection > path.connection-danger {
    stroke: #e05952;
}
.drawflow svg.connection > path.connection-danger:hover {
    stroke: #bd362f;
}

.drawflow .drawflow-node.disabled .canvas-workflow-block {
    border: 3px solid #e35651;
}

/* Custom input/output CSS */
.drawflow .drawflow-node > .inputs > .input::before {
    line-height: var(--dfInputHeight);
    vertical-align: top;
    text-align: end;
    right: 20px;
    position: absolute;
    white-space: nowrap;
    width: fit-content;
    transition-property: right, top;
    transition-duration: .1s;
}

.drawflow .drawflow-node > .inputs > .input_1:hover::before {
    right: 40px;
    font-weight: bold;
}
.drawflow .drawflow-node > .inputs > .input::before {
    display: none;
    transform: translateX(calc(50% - 8px));
    top: -1px;
    right: 0;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 1px solid #cdcdcd;
    border-radius: 3px;
}

.drawflow .drawflow-node > .inputs > .input:hover::before {
    display: block;
}
.drawflow .drawflow-node > .inputs > .input::after {
    color: black;
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: -4px;
    width: 13px;
    font-size: x-small;
    text-align: center;
    transition-property: width,top,font-size;
    transition-duration: .1s
}
.drawflow .drawflow-node > .inputs > .input:hover::after {
    font-size: larger;
    width: 20px;
    top: -1px;
}
.drawflow .drawflow-node > .inputs > .input_1 {
    background-color: #fff;
}
.drawflow .drawflow-node > .inputs > .input_1::before {
    content: 'Input';
}
.drawflow .drawflow-node > .inputs > .input_1::after {
    content: "\f061";
    font-size: 9px;
}
.drawflow .drawflow-node > .inputs > .input_1:hover::after {
    font-size: 14px;
}

.drawflow .drawflow-node.block-type-if > .inputs > .input {
    left: calc(var(--dfInputLeft) - 0.25em);
}


.drawflow .drawflow-node > .outputs > .output::before {
    line-height: var(--dfOutputHeight);
    vertical-align: top;
    text-align: end;
    top: 0px;
    right: 20px;
    position: absolute;
    white-space: nowrap;
    width: fit-content;
    transition-property: right, top;
    transition-duration: .1s;
}

.drawflow .drawflow-node > .outputs > .output_1:hover::before {
    top: 3px;
    right: 23px;
    font-weight: bold;
}
.drawflow .drawflow-node > .outputs > .output_2:hover::before {
    top: 3px;
    right: 23px;
    font-weight: bold;
}
.drawflow .drawflow-node > .outputs > .output_3:hover::before {
    top: 3px;
    right: 23px;
    font-weight: bold;
}
.drawflow .drawflow-node > .outputs > .output_4:hover::before {
    top: 3px;
    right: 23px;
    font-weight: bold;
}

.drawflow .drawflow-node.block-type-default > .outputs > .output::before {
    display: none;
    transform: translateX(calc(50% - 8px));
    right: 0;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 1px solid #cdcdcd;
    border-radius: 3px;
}

.drawflow .drawflow-node.block-type-default > .outputs > .output:hover::before {
    display: block;
}
.drawflow .drawflow-node.block-type-default > .outputs > .output::after {
    color: black;
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: -4px;
    width: 14px;
    font-size: x-small;
    text-align: center;
    transition-property: width,top,font-size;
    transition-duration: .1s
}
.drawflow .drawflow-node.block-type-default > .outputs > .output:hover::after {
    font-size: larger;
    width: 20px;
    top: -1px;
}
.drawflow .drawflow-node.block-type-default > .outputs > .output_1 {
    background-color: #fff;
}
.drawflow .drawflow-node.block-type-default > .outputs > .output_1::before {
    content: 'Output';
    top: -26px;
}
.drawflow .drawflow-node.block-type-default > .outputs > .output_1::after {
    content: "\f061";
    font-size: 9px;
}
.drawflow .drawflow-node.block-type-default > .outputs > .output_1:hover::after {
    font-size: 14px;
}

.drawflow .drawflow-node.block-type-trigger {
    border-left-color: #c97381;
    border-left-width: 0.25rem;
    border-left-style: solid;
    border-right-color: #c97381;
    border-right-width: 0.25rem;
    border-right-style: solid;
}

.drawflow .drawflow-node.block-type-logic {
    border-left-color: #74c973;
    border-left-width: 0.25rem;
    border-left-style: solid;
    border-right-color: #74c973;
    border-right-width: 0.25rem;
    border-right-style: solid;
}

.drawflow .drawflow-node.block-type-trigger:hover {
    box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) #c9738199;
}

.drawflow .drawflow-node.block-type-logic:hover {
    box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) #74c97399;
}

.drawflow .drawflow-node.block-type-trigger > .outputs > .output::before {
    display: none;
    transform: translateX(calc(50% - 8px));
    right: 0;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 1px solid #cdcdcd;
    border-radius: 3px;
}

.drawflow .drawflow-node.block-type-trigger > .outputs > .output:hover::before {
    display: block;
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output::after {
    color: black;
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: -3px;
    width: 14px;
    font-size: x-small;
    text-align: center;
    transition-property: width,top,font-size;
    transition-duration: .1s
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output:hover {
    width: 18px;
    height: 18px;
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output:hover::after {
    font-size: larger;
    width: 18px;
    top: -1px;
}

.drawflow .drawflow-node.block-type-trigger > .outputs > .output_1 {
    background-color: #fff;
    height: 14px;
    width: 14px;
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output_1::before {
    content: 'Listen to this trigger';
    top: -26px;
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output_1::after {
    content: "\f024";
    font-size: 11px;
}
.drawflow .drawflow-node.block-type-trigger > .outputs > .output_1:hover::after {
    font-size: 15px;
}

.drawflow .drawflow-node.block-type-if > .outputs > .output::before {
    display: none;
    transform: translateX(calc(50% - 8px));
    right: 0;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 1px solid #cdcdcd;
    border-radius: 3px;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output:hover::before {
    display: block;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output::after {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: -4px;
    width: 12px;
    font-size: x-small;
    text-align: center;
    transition-property: width,top,font-size;
    transition-duration: .1s
}
.drawflow .drawflow-node.block-type-if > .outputs > .output:hover::after {
    font-size: larger;
    width: 18px;
    top: -1px;
}

.drawflow .drawflow-node.block-type-if > .outputs > .output_1 {
    background-color: #fff;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output_1::before {
    content: 'Condition satisfied';
    top: -26px;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output_1::after {
    content: "\f00c";
}
.drawflow .drawflow-node.block-type-if > .outputs > .output_2 {
    background-color: #fff;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output_2::before {
    content: 'Condition not satisfied';
    top: 26px;
}
.drawflow .drawflow-node.block-type-if > .outputs > .output_2::after {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    content: "\f00d"
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output::before {
    display: none;
    transform: translateX(calc(50% - 8px));
    right: 0;
    padding: 0.25em 0.5em;
    background-color: #fff;
    border: 1px solid #cdcdcd;
    border-radius: 3px;
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output:hover::before {
    display: block;
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output::after {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: -4px;
    width: 12px;
    font-size: x-small;
    text-align: center;
    transition-property: width, top, font-size;
    transition-duration: .1s
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output:hover::after {
    font-size: larger;
    width: 18px;
    top: -1px;
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output_1 {
    background-color: #fff;
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output_1::before {
    content: 'parallel tasks';
    top: -26px;
}

.drawflow .drawflow-node.block-type-parallel > .outputs > .output_1::after {
    content: "\f074";
}